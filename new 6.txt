public static void createFrame()
    {
        EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                JFrame frame = new JFrame("Test");
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                try 
                {
                   UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (Exception e) {
                   e.printStackTrace();
                }
                JPanel panel = new JPanel();
                panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
                panel.setOpaque(true);
                JTextArea textArea = new JTextArea(15, 50);
                textArea.setWrapStyleWord(true);
                textArea.setEditable(false);
                textArea.setFont(Font.getFont(Font.SANS_SERIF));
                JScrollPane scroller = new JScrollPane(textArea);
                scroller.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
                scroller.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
                JPanel inputpanel = new JPanel();
                inputpanel.setLayout(new FlowLayout());
                JTextField input = new JTextField(20);
                JButton button = new JButton("Enter");
                DefaultCaret caret = (DefaultCaret) textArea.getCaret();
                caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
                panel.add(scroller);
                inputpanel.add(input);
                inputpanel.add(button);
                panel.add(inputpanel);
                frame.getContentPane().add(BorderLayout.CENTER, panel);
                frame.pack();
                frame.setLocationByPlatform(true);
                frame.setVisible(true);
                frame.setResizable(false);
                input.requestFocus();
            }
        });
    }*/
	/*public void connect(){
		try{
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			java.sql.Connection con=java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/production","root","");
			Statement stmt=con.createStatement();
		}catch(Exception e){
			System.out.println("Error in retrieve data "+e);
		}
	}
	*/
	/*public static void createFrame(){
				EventQueue.invokeLater(new Runnable()
				{
					@Override
					public void run()
					{
						JFrame frame = new JFrame("Test");
						frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
					try 
						{
							UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
						} catch (Exception e) {
						e.printStackTrace();
							}
					JPanel panel = new JPanel();
					panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
					panel.setOpaque(true);
					JTextArea textArea = new JTextArea(15, 50);
					textArea.setWrapStyleWord(true);
					textArea.setEditable(false);
					textArea.setFont(Font.getFont(Font.SANS_SERIF));
					JScrollPane scroller = new JScrollPane(textArea);
					scroller.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
					scroller.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
					JPanel inputpanel = new JPanel();
					inputpanel.setLayout(new FlowLayout());
					JTextField input = new JTextField(20);
					JButton button = new JButton("Enter");
					DefaultCaret caret = (DefaultCaret) textArea.getCaret();
					caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
					panel.add(scroller);
					inputpanel.add(input);
					inputpanel.add(button);
					panel.add(inputpanel);
					frame.getContentPane().add(BorderLayout.CENTER, panel);
					frame.pack();
					frame.setLocationByPlatform(true);
					frame.setVisible(true);
					frame.setResizable(false);
					input.requestFocus();
					}
				});
		}*//*public static void createFrame(){
				EventQueue.invokeLater(new Runnable()
				{
					@Override
					public void run()
					{
						JFrame frame = new JFrame("Test");
						frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
					try 
						{
							UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
						} catch (Exception e) {
						e.printStackTrace();
							}
					JPanel panel = new JPanel();
					panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
					panel.setOpaque(true);
					JTextArea textArea = new JTextArea(15, 50);
					textArea.setWrapStyleWord(true);
					textArea.setEditable(false);
					textArea.setFont(Font.getFont(Font.SANS_SERIF));
					JScrollPane scroller = new JScrollPane(textArea);
					scroller.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
					scroller.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
					JPanel inputpanel = new JPanel();
					inputpanel.setLayout(new FlowLayout());
					JTextField input = new JTextField(20);
					JButton button = new JButton("Enter");
					DefaultCaret caret = (DefaultCaret) textArea.getCaret();
					caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
					panel.add(scroller);
					inputpanel.add(input);
					inputpanel.add(button);
					panel.add(inputpanel);
					frame.getContentPane().add(BorderLayout.CENTER, panel);
					frame.pack();
					frame.setLocationByPlatform(true);
					frame.setVisible(true);
					frame.setResizable(false);
					input.requestFocus();
					}
				});
		}*/
		/*public class DateLabelFormatter extends AbstractFormatter {
 
    private String datePattern = "yyyy-MM-dd";
    private SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);
     
    @Override
	UtilDateModel model = new UtilDateModel();
		JDatePanelImpl datePanel = new JDatePanelImpl(model);
		JDatePickerImpl datePicker = new JDatePickerImpl(datePanel);
		   frame.add(datePicker);
		   Date selectedDate = (Date) datePicker.getModel().getValue();
		   Calendar selectedValue = (Calendar) datePicker.getModel().getValue();
			Date selectedDate = selectedValue.getTime();
			java.sql.Date selectedDate = (java.sql.Date) datePicker.getModel().getValue();
			UtilDateModel model = new UtilDateModel();
				model.setDate(1990, 8, 24);
				model.setSelected(true);
	public Object stringToValue(String text) throws ParseException {
			
		return dateFormatter.parseObject(text);
    }
 
    @Override
    public String valueToString(Object value) throws ParseException {
        if (value != null) {
            Calendar cal = (Calendar) value;
            return dateFormatter.format(cal.getTime());
        }
         
        return "";
    }
 
} 
*/
/*/*	JFrame frame2 = new JFrame("Title text");
					JTextField tup;
				tup=new JTextField();
				JLabel lup;
				lup =new JLabel("id to be Updated");
				lup.setBounds(50,100,100,50);
				frame2.add(lup);
				tup.setBounds(300,100,100,50);
				frame2.add(tup);
				frame2.setLayout(null);
					frame2.setVisible(true);
					frame2.setSize(600,360);*/	